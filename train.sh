#!/usr/bin/env bash

#############################################################################
# Пример использования:
#   ./train.sh                # запуск на cuda:0 (по умолчанию)
#   ./train.sh 1             # запуск на cuda:1
#
# При желании можно переопределить другие аргументы (например, batch_size)
# напрямую здесь или же отредактировать скрипт под себя.
#############################################################################

# 1. Считываем первый аргумент как номер GPU
GPU_ID=$1
if [ -z "$GPU_ID" ]; then
  GPU_ID=0
fi

# 2. Опционально можно установить CUDA_VISIBLE_DEVICES,
#    чтобы скрипт "видел" только одну карту.
# export CUDA_VISIBLE_DEVICES=$GPU_ID

#############################################################################
# Параметры обучения
# - dataset: укажите вашу папку датасета
# - iteration: число итераций
# - img_size: разрешение входа (например, 512)
# - batch_size, lr, ch, etc.
#############################################################################

DATASET="SN6-SAROPT"
ITER=100000
IMG_SIZE=512
BATCH_SIZE=1
LR=0.0002
CH=64
DEVICE="cuda:${GPU_ID}"
RESULT_DIR="results_sb_marm"
RESUME=True

#############################################################################
# Запуск main.py с нужными флагами
#############################################################################
python main.py \
  --phase train \
  --dataset $DATASET \
  --iteration $ITER \
  --batch_size $BATCH_SIZE \
  --lr $LR \
  --img_size $IMG_SIZE \
  --ch $CH \
  --device $DEVICE \
  --result_dir $RESULT_DIR \
  --print_freq 50 \
  --save_freq 10 \
  --resume $RESUME
